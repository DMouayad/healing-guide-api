# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    develop:
      watch:
        - action: sync
          path: ./src
          target: /src/app/dist
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    env_file:
      - .env
    environment:
      isDocker: 1
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: hguide
    ports:
      - 8080:8080

    depends_on:
      db:
        condition: service_healthy
        required: false
    secrets:
    - db-password
        
  db:
    image: postgis/postgis:latest
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=hguide
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    profiles:
      - development
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
secrets:
  db-password:
    file: src/db/password.txt

